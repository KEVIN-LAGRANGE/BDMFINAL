# -*- coding: utf-8 -*-
"""BDM_Final_Sample.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cBG08m4dtCyY7_T0XoFPIQ9lrW51-lkw
"""

!pip install pyproj
!curl -L "https://drive.google.com/uc?id=1TVhZgb1SWZbQB21J1hadcW-AIMnRiCL4&confirm=t" -o mapreduce.py
import json
import numpy as np
from pyproj import Transformer
import csv
import mapreduce as mr
import pandas as pd
from shapely.geometry import Point


if __name__=='__main__':
  data = pd.read_csv('nyc_supermarkets.csv')
  l1 = set(data.safegraph_placekey)
  cbg = pd.read_csv('nyc_cbg_centroids.csv')
  cbg['cbg_fips'] = cbg['cbg_fips'].astype('str')
  l2 = set(cbg['cbg_fips'])
  t = Transformer.from_crs(4326, 2263)
  ll = []
  for i in cbg.index:
    ll.append(t.transform(cbg.loc[i,'latitude'],cbg.loc[i,'longitude']))
  cbg['loc'] = ll
  loc = pd.Series(list(cbg['loc']),index = cbg['cbg_fips'])
  def mapper1(_, line):
    poi = line['poi_cbg']
    vistors = json.loads(line['visitor_home_cbgs'])
    if line['placekey'] in l1:
      if (line['date_range_start'][0:7] in ['2019-03','2019-10','2020-03','2020-10']) | (line['date_range_end'][0:7] in ['2019-03','2019-10','2020-03','2020-10']):

        if line['date_range_start'][0:7] in ['2019-03','2019-10','2020-03','2020-10']:
          date = line['date_range_start'][0:7]
        else:
          date = line['date_range_end'][0:7]
        for k in vistors.keys():
          if k in l2:
            distance = Point(loc[k]).distance(Point(loc[poi]))/5280
            trips = [distance] * vistors[k]
            yield ((k, date), trips)
  

  def reducer1(cbg_fips, list_of_trips):    
    yield (cbg_fips, sum(list_of_trips, []))

  def mapper2(cbg_fips, list_of_trips):
    yield (cbg_fips, sum(list_of_trips)/len(list_of_trips))
      
  with open('/tmp/bdm/weekly-patterns-nyc-2019-2020', 'r') as fi:
      reader = enumerate(csv.DictReader(fi))
      output1 = list(mr.run(mr.run(reader, mapper1, reducer1), mapper2))
  ans = pd.DataFrame(index = sorted(cbg['cbg_fips']),columns = ['2019-03','2019-10','2020-03','2020-10'])
  for i in output1:
    ans.loc[i[0][0], i[0][1]] = i[1]
  ans = ans.dropna(axis=0, how='all').fillna('')
  ans.to_csv('output.csv')



